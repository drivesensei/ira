name: Release

on:
  push:
    tags:
      - 'v*.*.*' # Triggers the workflow on versioned tags like v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            archive_ext: tar.gz
            build_cmd: tar -czf ira-linux-${{ github.run_number }}.tar.gz -C target/release ira
            artifact_name: ira-linux-${{ github.run_number }}.tar.gz
          - os: macos-latest
            platform: macos
            archive_ext: tar.gz
            build_cmd: tar -czf ira-macos-${{ github.run_number }}.tar.gz -C target/release ira
            artifact_name: ira-macos-${{ github.run_number }}.tar.gz
          - os: windows-latest
            platform: windows
            archive_ext: zip
            build_cmd: Compress-Archive -Path target\release\ira.exe -DestinationPath ira-windows-${{ github.run_number }}.zip
            artifact_name: ira-windows-${{ github.run_number }}.zip

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Cache Cargo registry and index
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/index
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Build Release Binary
        run: cargo build --release

      - name: Archive Binary
        run: ${{ matrix.build_cmd }}
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ira-${{ matrix.platform }}
          path: ${{ matrix.artifact_name }}

  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux Artifact
        if: matrix.platform == 'linux'
        uses: actions/download-artifact@v3
        with:
          name: ira-linux-${{ github.run_number }}.tar.gz
          path: ./release_assets

      - name: Download macOS Artifact
        if: matrix.platform == 'macos'
        uses: actions/download-artifact@v3
        with:
          name: ira-macos-${{ github.run_number }}.tar.gz
          path: ./release_assets

      - name: Download Windows Artifact
        if: matrix.platform == 'windows'
        uses: actions/download-artifact@v3
        with:
          name: ira-windows-${{ github.run_number }}.zip
          path: ./release_assets

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./release_assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
